// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  clerk_id   String   
  username String
  fullName String
  email      String   @unique
  password   String?
  rating     Int      @default(1200)
  createdAt  DateTime @default(now())
  postId String? 
  post   Post[]
  userPuzzles userPuzzle[]
}

model Game {
  id        String   @id @default(cuid())
  whiteid   String
  blackid   String
  pgn     String
  result String
  createdAt DateTime @default(now())
  post Post[]
}

model Post {
id String @id @default(cuid())
userid String
user   User   @relation(fields: [userid], references: [id])
header String
description String 
createdat DateTime @default(now())
gameId String? @unique
game   Game?   @relation(fields: [gameId], references: [id])
}

model userPuzzle {
  id     String @id @default(cuid())
  userId String 
  user   User   @relation(fields: [userId], references: [id])
  puzzleid String @unique
  puzzle   Puzzle   @relation(fields: [puzzleid], references: [id], map: "userPuzzle_userId_puzzleId_fkey")
  issolved Boolean
}

model Puzzle {
  id String @id
  fen String
  moves String
  puzzlerating Int
  ratingdeviation Int
  Population Int
  numberplayed Int
  theme String
  GameUrl String
  openingTags String? 
  userPuzzles  userPuzzle[]
}

model DailyPuzzle {
  id String @id @default(cuid())
  puzzleId String
  userId String
  rating Int
  completedDate String
}